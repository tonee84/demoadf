{
	"name": "DF-FactLoader",
	"properties": {
		"description": "This is a data flow example of how to load facts into your fact table from a single sample Employee dimension. There is also an example of handling early-arriving facts.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Facts",
						"type": "DatasetReference"
					},
					"name": "Facts"
				},
				{
					"dataset": {
						"referenceName": "DimEmp",
						"type": "DatasetReference"
					},
					"name": "DimEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactTable2",
						"type": "DatasetReference"
					},
					"name": "writeFactTable"
				}
			],
			"transformations": [
				{
					"name": "SetAttributes"
				},
				{
					"name": "LookupDimEmployee"
				},
				{
					"name": "DailyAggs"
				},
				{
					"name": "OrigData"
				},
				{
					"name": "JoinAllColumns"
				},
				{
					"name": "CheckForEarlyFact"
				}
			],
			"script": "source(output(\n\t\tEmployeeID as string,\n\t\tHours as string,\n\t\tAmount as string,\n\t\tProjDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Facts\nsource(output(\n\t\tEmpID as integer,\n\t\tSurrogateKey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartdate as timestamp,\n\t\tEndDate as timestamp,\n\t\tisCurrent as integer,\n\t\tprocessTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimEmployee\nFacts derive(employeeID = toInteger(EmployeeID),\n\t\tiscurrent = 1,\n\t\tfacttimestamp = currentTimestamp()) ~> SetAttributes\nSetAttributes, DimEmployee lookup(SetAttributes@employeeID == EmpID\n\t&& SetAttributes@iscurrent == DimEmployee@isCurrent,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupDimEmployee\nCheckForEarlyFact aggregate(groupBy(ProjDate,\n\t\tCheckForEarlyFact@employeeID),\n\tTotalHours = sum(toInteger(Hours)),\n\t\tTotalAmount = sum(toInteger(Amount))) ~> DailyAggs\nLookupDimEmployee select(mapColumn(\n\t\temployeeID = SetAttributes@employeeID,\n\t\tHours,\n\t\tAmount,\n\t\tProjDate,\n\t\tfacttimestamp,\n\t\tEmpID,\n\t\tsurrogatekey = SurrogateKey,\n\t\tRegion,\n\t\tStatus,\n\t\tEmpFunction,\n\t\tLevel,\n\t\tRole,\n\t\tStartDate = Startdate,\n\t\tEndDate,\n\t\tiscurrent = DimEmployee@isCurrent,\n\t\tprocesstime = processTime\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> OrigData\nDailyAggs, OrigData join(DailyAggs@ProjDate == OrigData@ProjDate\n\t&& DailyAggs@employeeID == OrigData@employeeID,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinAllColumns\nLookupDimEmployee derive(employeeID = iif(isNull(SetAttributes@employeeID),0,SetAttributes@employeeID)) ~> CheckForEarlyFact\nJoinAllColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProjDate as string,\n\t\temployeeID as integer,\n\t\ttotalHours as integer,\n\t\tTotalAmount as integer,\n\t\tFactTimeStamp as timestamp,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tProcessTime as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tProjDate = OrigData@ProjDate,\n\t\temployeeID = OrigData@employeeID,\n\t\ttotalHours = TotalHours,\n\t\tTotalAmount,\n\t\tFactTimeStamp = facttimestamp,\n\t\tsurrogatekey,\n\t\tRegion,\n\t\tStatus,\n\t\tEmpFunction,\n\t\tLevel,\n\t\tRole,\n\t\tProcessTime = processtime\n\t),\n\tpartitionBy('roundRobin', 4)) ~> writeFactTable"
		}
	}
}